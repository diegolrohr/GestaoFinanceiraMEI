<script>
    var reemprime = false;
    function inputHiddenId(id, value) {
        var attr = { "type": "hidden", "id": id, "name": id, "value": value };

        return createElem("input", attr);
    };

    function submitButton() {
        var attr = { "type": "submit", "class": "btn btn-narrow valid", "id": "" }

        return createElem("button", attr,
            createElem("i", { "class": "material-icons" }, "print")
        );
    };

    function createForm(row) {
        var formAttr = {
            "method": "GET",
            "action": "@Url.Action("Edit", "Cnab")" + "/{" + row.id + "}",
            "class": "cnabForm valign-wrapper right col s12"
        };
        return createElem("form", formAttr,[
            inputHiddenId("contaReceberId", row.contaReceberId),
            inputHiddenId("contaBancariaId", row.contaBancariaId),
            submitButton()
        ]);
    };

    function fnImprimirBoleto(data, type, row, meta) {
         return createForm(row).outerHTML;
    };

    function fnConfirmedOrCancel(idRecord, contaBancariaId) {        
        reemprime = true;
        fnSaveCnab(idRecord, contaBancariaId, reemprime);
    }

    $(document).off("submit", "form.cnabForm");
    $(document).on("submit", "form.cnabForm", function (e) {
        var that = $(this);
        that.loading("start");
        e.preventDefault();

        var contaBancariaId = $("#bancoId").val();
        if (that.serializeObject().contaBancariaId != "undefined")
            contaBancariaId = that.serializeObject().contaBancariaId;

        if (!that.valid()) {
            that.loading("stop");
            return false;
        }
        else {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: '@Url.Action("ValidaBoletoJaGeradoParaOutroBanco", "Cnab")',
                contentType: "application/json",
                data: { contaReceberId: that.serializeObject().contaReceberId, contaBancariaId: contaBancariaId},
                success: function success(result) {
                    if (result.success) {
                        if (result.data != null)
                            fly01.confirm("Boleto já gerado para outro banco.", "Já existe um boleto gerado para esta conta em outro banco e está vinculado a um arquivo de remessa, gostaria que este boleto seja remetido novamente?", "fnConfirmedOrCancel('" + that.serializeObject().contaReceberId + "', '" + contaBancariaId + "')");
                        else
                            fnSaveCnab(that.serializeObject().contaReceberId, contaBancariaId, true);
                    } 
                    else
                        fnSaveCnab(that.serializeObject().contaReceberId, contaBancariaId, false);

                    that.loading("stop");
                },
            });
        }
    });

    function fnSaveCnab(idRecord, contaBancariaId, reemprime) {
        $.ajax({
            type: "GET",
            dataType: "json",
            url: '@Url.Action("ImprimeBoleto", "Cnab")',
            contentType: "application/json",
            data: { contaReceberId: idRecord, contaBancariaId: contaBancariaId, reimprimeBoleto: reemprime},
            success: function success(data) {
                if (data.success) {
                    fly01.toast("Boleto emitido com sucesso.", "success");
                    if (data.message !== "" && data.message !== undefined) {
                        var win = window.open("", "_blank");
                        win.document.write(data.message);
                        win.print();
                        win.close();
                    }
                } else {
                    fly01.loading.stop();
                    try {
                        var jsonMessage = JSON.parse(data.message);
                        var errors = {};
                        jsonMessage.innerMessage.filter(x => ((x.dataField || "") != "")).forEach(element => {
                            if ($("#" + element.dataField).length > 0) {
                                errors[element.dataField] = element.message;
                            }
                            else {
                                fly01.toast(element.message, "error", 8000);
                            }
                        });
                        jsonMessage.innerMessage.filter(x => ((x.dataField || "") == "")).forEach(element => {
                            fly01.toast(element.message, "error", 8000);
                        });
                    } catch (e) {
                        fly01.toast(data.message, "error");
                    }
                }

                fly01.loading.stop();
            },
        });
    }
</script>