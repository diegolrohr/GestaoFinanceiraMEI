<script>
    @Html.Partial("Functions/_fnMain");

    var justSavePedidoToGoStepProdutos = false;
    var onCancelMustDeletePedido = false;

    function isCreate() {
        var id = $("form#fly01frm input#id").val();

        if (id.length == 0)
            return true;

        return false;
    }

    function calculaTotalPedido() {
        var valorFrete = 0;
        if (($('select#tipoVenda').val() == "Devolucao" && ($('select#tipoFrete').val() == "CIF" || $('select#tipoFrete').val() == "Remetente"))
            ||
            ($('select#tipoVenda').val() == "Normal" && ($('select#tipoFrete').val() == "FOB" || $('select#tipoFrete').val() == "Destinatario"))){
            valorFrete = TryParseFloat(noComma($('input#valorFrete').val()));
        }

        var idPedido = $("form#fly01frm input#id").val();
        var idCliente = $("form#fly01frm input#clienteId").val();
        var geraNotaFiscal = $('input#geraNotaFiscal:checked').val() == "true";
        if (geraNotaFiscal) {
            $("#naturezaOperacaoField").show();
            $("input#naturezaOperacao").rules("add", { required: true });
        }
        else {
            $("#naturezaOperacaoField").hide();
            $("input#naturezaOperacao").rules("remove", "required");
            $('input#naturezaOperacao').removeClass("invalid")
        }

        fly01.loading.start();

        $.ajax({
            url: '@Url.Action("TotalOrdemVenda", "OrdemVenda")',
            type: "GET",
            data: { id: idPedido, clienteId: idCliente, geraNotaFiscal: geraNotaFiscal, valorFrete: valorFrete }
        })
        .done(function (data) {
            if (data.success) {
                $('input#totalProdutos').val(data.total.TotalProdutos.formatMoneyMask(2, 3, '', ','));
                $('input#totalImpostosProdutos').val(data.total.TotalImpostosProdutos.formatMoneyMask(2, 3, '', ','));
                $('input#totalImpostosProdutosNaoAgrega').val(data.total.TotalImpostosProdutosNaoAgrega.formatMoneyMask(2, 3, '', ','));
                $('input#totalServicos').val(data.total.TotalServicos.formatMoneyMask(2, 3, '', ','));
                $('input#totalImpostosServicos').val(data.total.TotalImpostosServicos.formatMoneyMask(2, 3, '', ','));
                $('input#totalFrete').val(data.total.ValorFrete.formatMoneyMask(2, 3, '', ','));
                $('input#totalOrdemVenda').val(data.total.Total.formatMoneyMask(2, 3, '', ','));
                fly01.fn.updateTextFields();
            }
            else {
                $('input#totalProdutos').val(0.0.formatMoneyMask(2, 3, '', ','));
                $('input#totalImpostosProdutos').val(0.0.formatMoneyMask(2, 3, '', ','));
                $('input#totalImpostosProdutosNaoAgrega').val(0.0.formatMoneyMask(2, 3, '', ','));
                $('input#totalServicos').val(0.0.formatMoneyMask(2, 3, '', ','));
                $('input#totalImpostosServicos').val(0.0.formatMoneyMask(2, 3, '', ','));
                $('input#totalFrete').val(0.0.formatMoneyMask(2, 3, '', ','));
                $('input#totalOrdemVenda').val(0.0.formatMoneyMask(2, 3, '', ','));
                fly01.fn.submitErrorHandler(null, data.message);
            }
            fly01.loading.stop();
        })
        .fail(function (jqxhr, textStatus, error) {
            var err = 'Ocorreu um erro na requisição: ' + textStatus + ", " + error;
            fly01.toast(err, "error");
            fly01.loading.stop();
        });
    }

    function fnBindStepsWizard() {
        function savePedido() {
            if (isCreate() && ($("li#stepCadastro").hasClass("active"))) {
                justSavePedidoToGoStepProdutos = true;
                return $("form#fly01frm").submit();
            }
        }
        $('li#stepProdutos div.step-title').click(function () {
            savePedido();
        });
        $('#stepCadastro > div.step-content > div.step-actions > button.btn.next-step').click(function () {
            savePedido();
        });
    }

    function fnBindOverrideSubmit() {
        $("form#fly01frm").off("submit");
        $("form#fly01frm").on("submit", function (e) {
            e.preventDefault();
            if (!$(this).valid()) return false;

            fly01.loading.start();

            $('input#numero').removeAttr('disabled');

            var jsonData = $(this).serializeObject();
            if ($('input#finalizarPedido:checked').val() == "true") {
                jsonData.status = "Finalizado";
            }

            $('input#numero').attr('disabled', 'disabled');
            $('input#orcamentoOrigemNumero').attr('disabled', 'disabled');
            fly01.fn.updateTextFields();

            var url;
            if (isCreate()) {
                url = '@Url.Action("Create", "Pedido")';
            }
            else {
                url = '@Url.Action("Edit", "Pedido")';
            }

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: url,
                data: JSON.stringify({ 'entityVM': jsonData }),
                success: function success(data) {
                    if (data.success) {
                        fly01.loading.stop();

                        var strMsg = "Cadastrado com sucesso.";
                        if (data.message !== "" && !onCancelMustDeletePedido) strMsg = data.message;
                        //fica na página ou volta pra lista
                        if (justSavePedidoToGoStepProdutos) {
                            justSavePedidoToGoStepProdutos = false;
                            onCancelMustDeletePedido = true;
                            $("form#fly01frm input#id").val(data.id);
                            $("form#fly01frm input#numero").val(data.numero);
                            if (jsonData.tipoVenda == "Devolucao") {
                                //preencher os campos
                            }
                            fly01._.dtOrdemVendaProdutos.refresh();
                            fly01._.dtOrdemVendaServicos.refresh();

                            var url = window.location.href.replace('/Create', '/Edit/' + data.id);
                            window.history.pushState({}, document.title, url);

                            return true;
                        }
                        else {
                            fly01.toast(strMsg, "success");
                            fly01.go("@Url.Action("List","OrdemVenda")");
                        }
                    } else {
                        if (justSavePedidoToGoStepProdutos) {
                            $('#stepProdutos > div.step-content > div.step-actions > button.btn.previous-step').click();
                        }
                        fly01.loading.stop();
                        fly01.fn.submitErrorHandler(null, data.message);
                    }
                },
                error: function error(jXHR, textStatus) {
                    fly01.toast(textStatus, "error");
                    fly01.loading.stop();
                }
            });
        });
    }

    function fnSetInformacoes() {
        $("#infoEstoqueNegativoField").text('O estoque não pode ficar negativo, portanto abaixo é exibido a relação dos produtos que ficarão com o estoque faltante. Marque a opção para ajustar automáticamente a quantidade negativa ou realize os ajustes '
                + 'pelo aplicativo Fly01 Estoque. Ao marcar a opção Ajustar Negativo, serão criadas movimentações para que o saldo do produto fique com quantidade zerada.');
    }

    function EstoqueNegativoETotal() {
        fly01._.dtProdutosEstoqueNegativo.refresh();
        calculaTotalPedido();
    }

    function fnFormReadyPedido() {

        if (isCreate()) {
            var today = new Date();
            $("input#geraFinanceiro").prop("checked", true);
            $("input#movimentaEstoque").prop("checked", true);
            $("input#geraFinanceiro").prop("checked", true);
            $("#naturezaOperacaoField").hide();
            fly01._.data.set(today);
            fly01._.dataVencimento.set(today);
            fly01.fn.updateTextFields();
            fnBindStepsWizard();
        }
        else {
            fly01._.dtOrdemVendaProdutos.refresh();
            fly01._.dtOrdemVendaServicos.refresh();
        }

        fnBindOverrideSubmit();
        fnValidaCamposGeraFinanceiro();
        fnChangeFrete();
        fnSetInformacoes();

        $('li#stepFinalizar div.step-title').click(function () {
            if (!isCreate()) {
                EstoqueNegativoETotal();
            }
        });
        $('#stepTransporte > div.step-content > div.step-actions > button.btn.next-step').click(function () {
            if (!isCreate()) {
                EstoqueNegativoETotal();
            }
        });
    }
</script>