<script>

    function inputsPendencias(row) {
        var inputs = [];
        inputs.push(inputHiddenId("unidadeXml" + `${row.id}`, "unidadeXml", row.unidadeMedida_abreviacao));
        inputs.push(inputHiddenId("unidadeCadastro" + `${row.id}`, "unidadeCadastro", row.produto_unidadeMedida_abreviacao));
        inputs.push(inputHiddenId("quantidade" + `${row.id}`, "quantidade", row.quantidadeCurrency));
        inputs.push(inputHiddenId("valor" + `${row.id}`, "valor", row.valorCurrency));
        inputs.push(inputHiddenId("fatorConversao" + `${row.id}`, "fatorConversao", 1.00));
        inputs.push(inputHiddenId("tipoFatorConversao" + `${row.id}`, "tipoFatorConversao", row.tipoFatorConversao));

        if (row.produtoId == null || row.produtoId == undefined || row.produtoId == "")
        {
            let labelId = "produtoDescricao" + `${row.id}`;
            let inputId = "produtoId" + `${row.id}`;

            const inputAttr = {
                "type": "text",
                "class": "autocomplete col s8",
                "id": labelId,
                "name": labelId,
                "data-url": "@Url.Action("Produto", "AutoComplete")",
                "data-target": inputId,
                "data-id": row.id,
                "style": "margin-right:5px"
            };            
            inputs.push(createElem("input", { "type": "hidden", "name": "produtoId", "id": inputId }));
            inputs.push(createElem("input", inputAttr));
            inputs.push(createElem("label", { "for": `novoProduto${row.id}` }, "Novo"));
            inputs.push(fnRenderCheck(row, `novoProduto`, true));
        }
        else {
            inputs.push(inputHiddenId("produtoId" + `${row.id}`, "produtoId", row.produtoId));
            inputs.push(inputHiddenId("novoProduto" + `${row.id}`, "novoProduto", row.novoProduto));
        }
        return createElem("div", { "class": `right col s12` }, inputs);
    };

    function inputHiddenId(id, name, value) {
        var attr = { "type": "hidden", "id": id, "name": (name != undefined ? name : id), "value": value };
        return createElem("input", attr);
    };

    function submitButton(row) {
        var attr = {
            "class": "btn btn-narrow valid",
            "id": "btnSalvarPendencia" + `${row.id}`,
            "onClick": "fnSubmitForm(" + "'" + row.id + "'" + ")",
        };
        return createElem("a", attr, [createElem("i", { "class": "valign-wrapper material-icons center", "style": "margin:0px;position:inherit;background-color:#fafafb00;color:#fafafb;" }, "save")]);
    };

    function fatorConversaoButton(row) {
        var formAttr = {
            "class": "btn btn-narrow valid hide",
            "id": "btnFatorConversao"+`${row.id}`,
            "onClick": "fnModalFatorConversao(" + "'" + row.id + "'" + ")",
        };
        return createElem("a", formAttr, [createElem("i", { "class": "valign-wrapper material-icons center", "style": "margin:0px;position:inherit;background-color:#fafafb00;color:#fafafb;" }, "compare_arrows")]);
    }

    function fnModalFatorConversao(id) {
        var baseModalUrl = "@Url.Action("ModalFatorConversao", "NFeImportacaoProduto")";

        baseModalUrl += "?id=" + id;
        baseModalUrl += "&unidadeXml=" + $("#unidadeXml" + `${id}`).val();;
        baseModalUrl += "&unidadeCadastro=" + $("#unidadeCadastro" + `${id}`).val();
        baseModalUrl += "&valor=" + $("#valor" + `${id}`).val();
        baseModalUrl += "&quantidade=" + $("#quantidade" + `${id}`).val();
        baseModalUrl += "&fatorConversao=" + parseFloat(noComma($("#fatorConversao" + `${id}`).val()));
        baseModalUrl += "&tipoFatorConversao=" + $("#tipoFatorConversao" + `${id}`).val();
        $$$.modal(baseModalUrl);
    }

    function createForm(row) {
        var action = "@Url.Action("SalvarProdutoPendencia", "NFeImportacaoProduto")";

        var formAttr = {
            "id": "produtoPendencia"+`${row.id}`,
            "method": "POST", "action": action,
            "class": "produtoPendenciaForm valign-wrapper right col s12",
            "style": "padding-left: 0;"
        }

        return createElem("form", formAttr,[
                    inputHiddenId("id"+`${row.id}`, "id", row.id),
                    inputsPendencias(row),
                    fatorConversaoButton(row),
                    submitButton(row)
        ]);
    };

    function fnRenderSalvarProdutoPendencia(data, type, row, meta) {
        return createForm(row).outerHTML;
    };

    function fnSubmitForm(id) {
        var formId = "#produtoPendencia" + id;
        var that = $(formId);
        that.loading("start");
        if (!that.valid()) {
            that.loading("stop");
            return false;
        }
        else {
            var formData = that.serializeObject();
            formData.fatorConversao = parseFloat(noComma(formData.fatorConversao));
            if (formData.novoProduto && formData.novoProduto == "on") {
                formData.novoProduto = true
            }
            else {
                formData.novoProduto = false
            }

            if (formData.fatorConversao <= 0) {
                $$$.toast("Fator de conversão deve ser superior a zero.", "error");
                that.loading("stop");
                return false;
            }
            if ((formData.produtoId == null || formData.produtoId == "" || formData.produtoId == undefined) && !formData.novoProduto) {
                $$$.toast("Vincule a um produto existente ou marque para criar um novo produto.", "error");
                that.loading("stop");
                return false;
            }

            $.ajax({
                url: that.attr("action"),
                type: that.attr("method"),
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(formData),
                success: function success(data) {
                    if (data.success) {
                        var strMsg = "Atualizado com sucesso.";
                        if (data.message !== "")
                            strMsg = data.message;
                        $$$.toast(strMsg, "success");
                        that.loading("stop");
                        $(`#btnSalvarPendencia${data.id}`).parent().parent().parent().remove();
                        $$$._.dtProdutosPendencias.ajax.json().recordsTotal -= 1;
                        if (!verificaPendencias()) {
                            $('#stepProdutosPendencias').hide();
                            $('li#stepProdutos div.step-title').click();
                        }
                    } else {
                        that.loading("stop");
                        $$$.fn.submitErrorHandler(null, data.message);
                    }
                    that.loading("stop");
                },
                error: function error(jXHR, textStatus) {
                    $$$.toast(textStatus, "error");
                    that.loading("stop");
                }
            });
        }
    }
</script>