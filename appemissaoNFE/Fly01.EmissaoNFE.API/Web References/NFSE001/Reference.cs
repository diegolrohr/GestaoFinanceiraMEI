//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Fly01.EmissaoNFE.API.NFSE001 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NFSE001SOAP", Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSE001 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CANCELANFSE001OperationCompleted;
        
        private System.Threading.SendOrPostCallback CFGAMBNFSE001OperationCompleted;
        
        private System.Threading.SendOrPostCallback CFGNFSECERTPFXOperationCompleted;
        
        private System.Threading.SendOrPostCallback CFGREADYXOperationCompleted;
        
        private System.Threading.SendOrPostCallback CONSLOTENFSE001OperationCompleted;
        
        private System.Threading.SendOrPostCallback CONSNOTANFSE001OperationCompleted;
        
        private System.Threading.SendOrPostCallback CONSSEQNFSE001OperationCompleted;
        
        private System.Threading.SendOrPostCallback GERAARQIMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GERAARQIMPARROperationCompleted;
        
        private System.Threading.SendOrPostCallback GETMUNSIAFOperationCompleted;
        
        private System.Threading.SendOrPostCallback MONITORXOperationCompleted;
        
        private System.Threading.SendOrPostCallback PROCIMPNFSETXTOperationCompleted;
        
        private System.Threading.SendOrPostCallback REMESSANFSE001OperationCompleted;
        
        private System.Threading.SendOrPostCallback RETMUNCANCOperationCompleted;
        
        private System.Threading.SendOrPostCallback RETMUNSERVOperationCompleted;
        
        private System.Threading.SendOrPostCallback RETORNANFSEOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCHEMAXOperationCompleted;
        
        private System.Threading.SendOrPostCallback STATUSNFSEOperationCompleted;
        
        private System.Threading.SendOrPostCallback TSSCONSRPSNFSEOperationCompleted;
        
        private System.Threading.SendOrPostCallback VERSAONFSE001OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NFSE001() {
            this.Url = global::Fly01.EmissaoNFE.API.Properties.Settings.Default.Fly01_EmissaoNFE_API_NFSE001_NFSE001;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CANCELANFSE001CompletedEventHandler CANCELANFSE001Completed;
        
        /// <remarks/>
        public event CFGAMBNFSE001CompletedEventHandler CFGAMBNFSE001Completed;
        
        /// <remarks/>
        public event CFGNFSECERTPFXCompletedEventHandler CFGNFSECERTPFXCompleted;
        
        /// <remarks/>
        public event CFGREADYXCompletedEventHandler CFGREADYXCompleted;
        
        /// <remarks/>
        public event CONSLOTENFSE001CompletedEventHandler CONSLOTENFSE001Completed;
        
        /// <remarks/>
        public event CONSNOTANFSE001CompletedEventHandler CONSNOTANFSE001Completed;
        
        /// <remarks/>
        public event CONSSEQNFSE001CompletedEventHandler CONSSEQNFSE001Completed;
        
        /// <remarks/>
        public event GERAARQIMPCompletedEventHandler GERAARQIMPCompleted;
        
        /// <remarks/>
        public event GERAARQIMPARRCompletedEventHandler GERAARQIMPARRCompleted;
        
        /// <remarks/>
        public event GETMUNSIAFCompletedEventHandler GETMUNSIAFCompleted;
        
        /// <remarks/>
        public event MONITORXCompletedEventHandler MONITORXCompleted;
        
        /// <remarks/>
        public event PROCIMPNFSETXTCompletedEventHandler PROCIMPNFSETXTCompleted;
        
        /// <remarks/>
        public event REMESSANFSE001CompletedEventHandler REMESSANFSE001Completed;
        
        /// <remarks/>
        public event RETMUNCANCCompletedEventHandler RETMUNCANCCompleted;
        
        /// <remarks/>
        public event RETMUNSERVCompletedEventHandler RETMUNSERVCompleted;
        
        /// <remarks/>
        public event RETORNANFSECompletedEventHandler RETORNANFSECompleted;
        
        /// <remarks/>
        public event SCHEMAXCompletedEventHandler SCHEMAXCompleted;
        
        /// <remarks/>
        public event STATUSNFSECompletedEventHandler STATUSNFSECompleted;
        
        /// <remarks/>
        public event TSSCONSRPSNFSECompletedEventHandler TSSCONSRPSNFSECompleted;
        
        /// <remarks/>
        public event VERSAONFSE001CompletedEventHandler VERSAONFSE001Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/CANCELANFSE001", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="CANCELANFSE001RESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CANCELANFSE001RESULT")]
        public NFSESID CANCELANFSE001(string USERTOKEN, string ID_ENT, NFSE NFSE, string CODMUN) {
            object[] results = this.Invoke("CANCELANFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        NFSE,
                        CODMUN});
            return ((NFSESID)(results[0]));
        }
        
        /// <remarks/>
        public void CANCELANFSE001Async(string USERTOKEN, string ID_ENT, NFSE NFSE, string CODMUN) {
            this.CANCELANFSE001Async(USERTOKEN, ID_ENT, NFSE, CODMUN, null);
        }
        
        /// <remarks/>
        public void CANCELANFSE001Async(string USERTOKEN, string ID_ENT, NFSE NFSE, string CODMUN, object userState) {
            if ((this.CANCELANFSE001OperationCompleted == null)) {
                this.CANCELANFSE001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCANCELANFSE001OperationCompleted);
            }
            this.InvokeAsync("CANCELANFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        NFSE,
                        CODMUN}, this.CANCELANFSE001OperationCompleted, userState);
        }
        
        private void OnCANCELANFSE001OperationCompleted(object arg) {
            if ((this.CANCELANFSE001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CANCELANFSE001Completed(this, new CANCELANFSE001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/CFGAMBNFSE001", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="CFGAMBNFSE001RESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CFGAMBNFSE001RESULT")]
        public string CFGAMBNFSE001(
                    string USERTOKEN, 
                    string ID_ENT, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string AMBIENTENFSE, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string MODNFSE, 
                    string VERSAONFSE, 
                    string CODMUN, 
                    string CODSIAFI, 
                    string USO, 
                    string MAXLOTE, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string CNPJAUT, 
                    string ENVSINC, 
                    string LOGIN, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] PASS, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] AUTORIZACAO, 
                    string CHAVEAUTENTICACAO, 
                    string TOKENID, 
                    string CLIENTID, 
                    string CLIENTSECRET) {
            object[] results = this.Invoke("CFGAMBNFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        AMBIENTENFSE,
                        MODNFSE,
                        VERSAONFSE,
                        CODMUN,
                        CODSIAFI,
                        USO,
                        MAXLOTE,
                        CNPJAUT,
                        ENVSINC,
                        LOGIN,
                        PASS,
                        AUTORIZACAO,
                        CHAVEAUTENTICACAO,
                        TOKENID,
                        CLIENTID,
                        CLIENTSECRET});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CFGAMBNFSE001Async(
                    string USERTOKEN, 
                    string ID_ENT, 
                    string AMBIENTENFSE, 
                    string MODNFSE, 
                    string VERSAONFSE, 
                    string CODMUN, 
                    string CODSIAFI, 
                    string USO, 
                    string MAXLOTE, 
                    string CNPJAUT, 
                    string ENVSINC, 
                    string LOGIN, 
                    byte[] PASS, 
                    byte[] AUTORIZACAO, 
                    string CHAVEAUTENTICACAO, 
                    string TOKENID, 
                    string CLIENTID, 
                    string CLIENTSECRET) {
            this.CFGAMBNFSE001Async(USERTOKEN, ID_ENT, AMBIENTENFSE, MODNFSE, VERSAONFSE, CODMUN, CODSIAFI, USO, MAXLOTE, CNPJAUT, ENVSINC, LOGIN, PASS, AUTORIZACAO, CHAVEAUTENTICACAO, TOKENID, CLIENTID, CLIENTSECRET, null);
        }
        
        /// <remarks/>
        public void CFGAMBNFSE001Async(
                    string USERTOKEN, 
                    string ID_ENT, 
                    string AMBIENTENFSE, 
                    string MODNFSE, 
                    string VERSAONFSE, 
                    string CODMUN, 
                    string CODSIAFI, 
                    string USO, 
                    string MAXLOTE, 
                    string CNPJAUT, 
                    string ENVSINC, 
                    string LOGIN, 
                    byte[] PASS, 
                    byte[] AUTORIZACAO, 
                    string CHAVEAUTENTICACAO, 
                    string TOKENID, 
                    string CLIENTID, 
                    string CLIENTSECRET, 
                    object userState) {
            if ((this.CFGAMBNFSE001OperationCompleted == null)) {
                this.CFGAMBNFSE001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFGAMBNFSE001OperationCompleted);
            }
            this.InvokeAsync("CFGAMBNFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        AMBIENTENFSE,
                        MODNFSE,
                        VERSAONFSE,
                        CODMUN,
                        CODSIAFI,
                        USO,
                        MAXLOTE,
                        CNPJAUT,
                        ENVSINC,
                        LOGIN,
                        PASS,
                        AUTORIZACAO,
                        CHAVEAUTENTICACAO,
                        TOKENID,
                        CLIENTID,
                        CLIENTSECRET}, this.CFGAMBNFSE001OperationCompleted, userState);
        }
        
        private void OnCFGAMBNFSE001OperationCompleted(object arg) {
            if ((this.CFGAMBNFSE001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFGAMBNFSE001Completed(this, new CFGAMBNFSE001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/CFGNFSECERTPFX", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="CFGNFSECERTPFXRESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CFGNFSECERTPFXRESULT")]
        public string CFGNFSECERTPFX(string USERTOKEN, string ID_ENT, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] CERTIFICATE, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] PASSWORD, string USO) {
            object[] results = this.Invoke("CFGNFSECERTPFX", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CERTIFICATE,
                        PASSWORD,
                        USO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CFGNFSECERTPFXAsync(string USERTOKEN, string ID_ENT, byte[] CERTIFICATE, byte[] PASSWORD, string USO) {
            this.CFGNFSECERTPFXAsync(USERTOKEN, ID_ENT, CERTIFICATE, PASSWORD, USO, null);
        }
        
        /// <remarks/>
        public void CFGNFSECERTPFXAsync(string USERTOKEN, string ID_ENT, byte[] CERTIFICATE, byte[] PASSWORD, string USO, object userState) {
            if ((this.CFGNFSECERTPFXOperationCompleted == null)) {
                this.CFGNFSECERTPFXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFGNFSECERTPFXOperationCompleted);
            }
            this.InvokeAsync("CFGNFSECERTPFX", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CERTIFICATE,
                        PASSWORD,
                        USO}, this.CFGNFSECERTPFXOperationCompleted, userState);
        }
        
        private void OnCFGNFSECERTPFXOperationCompleted(object arg) {
            if ((this.CFGNFSECERTPFXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFGNFSECERTPFXCompleted(this, new CFGNFSECERTPFXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/CFGREADYX", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="CFGREADYXRESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CFGREADYXRESULT", DataType="integer")]
        public string CFGREADYX(string USERTOKEN, string ID_ENT, string CODMUN) {
            object[] results = this.Invoke("CFGREADYX", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CFGREADYXAsync(string USERTOKEN, string ID_ENT, string CODMUN) {
            this.CFGREADYXAsync(USERTOKEN, ID_ENT, CODMUN, null);
        }
        
        /// <remarks/>
        public void CFGREADYXAsync(string USERTOKEN, string ID_ENT, string CODMUN, object userState) {
            if ((this.CFGREADYXOperationCompleted == null)) {
                this.CFGREADYXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFGREADYXOperationCompleted);
            }
            this.InvokeAsync("CFGREADYX", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN}, this.CFGREADYXOperationCompleted, userState);
        }
        
        private void OnCFGREADYXOperationCompleted(object arg) {
            if ((this.CFGREADYXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFGREADYXCompleted(this, new CFGREADYXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/CONSLOTENFSE001", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="CONSLOTENFSE001RESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CONSLOTENFSE001RESULT")]
        public string CONSLOTENFSE001(string USERTOKEN, string ID_ENT, string CODMUN, string LOTE) {
            object[] results = this.Invoke("CONSLOTENFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN,
                        LOTE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CONSLOTENFSE001Async(string USERTOKEN, string ID_ENT, string CODMUN, string LOTE) {
            this.CONSLOTENFSE001Async(USERTOKEN, ID_ENT, CODMUN, LOTE, null);
        }
        
        /// <remarks/>
        public void CONSLOTENFSE001Async(string USERTOKEN, string ID_ENT, string CODMUN, string LOTE, object userState) {
            if ((this.CONSLOTENFSE001OperationCompleted == null)) {
                this.CONSLOTENFSE001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCONSLOTENFSE001OperationCompleted);
            }
            this.InvokeAsync("CONSLOTENFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN,
                        LOTE}, this.CONSLOTENFSE001OperationCompleted, userState);
        }
        
        private void OnCONSLOTENFSE001OperationCompleted(object arg) {
            if ((this.CONSLOTENFSE001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CONSLOTENFSE001Completed(this, new CONSLOTENFSE001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/CONSNOTANFSE001", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="CONSNOTANFSE001RESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CONSNOTANFSE001RESULT")]
        public NFSE2 CONSNOTANFSE001(string USERTOKEN, string ID_ENT, string CODMUN, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime DATADE, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime DATAATE) {
            object[] results = this.Invoke("CONSNOTANFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN,
                        DATADE,
                        DATAATE});
            return ((NFSE2)(results[0]));
        }
        
        /// <remarks/>
        public void CONSNOTANFSE001Async(string USERTOKEN, string ID_ENT, string CODMUN, System.DateTime DATADE, System.DateTime DATAATE) {
            this.CONSNOTANFSE001Async(USERTOKEN, ID_ENT, CODMUN, DATADE, DATAATE, null);
        }
        
        /// <remarks/>
        public void CONSNOTANFSE001Async(string USERTOKEN, string ID_ENT, string CODMUN, System.DateTime DATADE, System.DateTime DATAATE, object userState) {
            if ((this.CONSNOTANFSE001OperationCompleted == null)) {
                this.CONSNOTANFSE001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCONSNOTANFSE001OperationCompleted);
            }
            this.InvokeAsync("CONSNOTANFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN,
                        DATADE,
                        DATAATE}, this.CONSNOTANFSE001OperationCompleted, userState);
        }
        
        private void OnCONSNOTANFSE001OperationCompleted(object arg) {
            if ((this.CONSNOTANFSE001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CONSNOTANFSE001Completed(this, new CONSNOTANFSE001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/CONSSEQNFSE001", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="CONSSEQNFSE001RESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CONSSEQNFSE001RESULT")]
        public string CONSSEQNFSE001(string USERTOKEN, string ID_ENT, string CODMUN) {
            object[] results = this.Invoke("CONSSEQNFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CONSSEQNFSE001Async(string USERTOKEN, string ID_ENT, string CODMUN) {
            this.CONSSEQNFSE001Async(USERTOKEN, ID_ENT, CODMUN, null);
        }
        
        /// <remarks/>
        public void CONSSEQNFSE001Async(string USERTOKEN, string ID_ENT, string CODMUN, object userState) {
            if ((this.CONSSEQNFSE001OperationCompleted == null)) {
                this.CONSSEQNFSE001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCONSSEQNFSE001OperationCompleted);
            }
            this.InvokeAsync("CONSSEQNFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN}, this.CONSSEQNFSE001OperationCompleted, userState);
        }
        
        private void OnCONSSEQNFSE001OperationCompleted(object arg) {
            if ((this.CONSSEQNFSE001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CONSSEQNFSE001Completed(this, new CONSSEQNFSE001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/GERAARQIMP", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="GERAARQIMPRESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GERAARQIMPRESULT")]
        public string GERAARQIMP(string USERTOKEN, string ID_ENT, string IDINICIAL, string IDFINAL, string DEST, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime DATEDECL, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool DATEDECLSpecified, bool REPROC, [System.Xml.Serialization.XmlIgnoreAttribute()] bool REPROCSpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime DATAINI, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool DATAINISpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime DATAFIM, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool DATAFIMSpecified) {
            object[] results = this.Invoke("GERAARQIMP", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        IDINICIAL,
                        IDFINAL,
                        DEST,
                        DATEDECL,
                        DATEDECLSpecified,
                        REPROC,
                        REPROCSpecified,
                        DATAINI,
                        DATAINISpecified,
                        DATAFIM,
                        DATAFIMSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GERAARQIMPAsync(string USERTOKEN, string ID_ENT, string IDINICIAL, string IDFINAL, string DEST, System.DateTime DATEDECL, bool DATEDECLSpecified, bool REPROC, bool REPROCSpecified, System.DateTime DATAINI, bool DATAINISpecified, System.DateTime DATAFIM, bool DATAFIMSpecified) {
            this.GERAARQIMPAsync(USERTOKEN, ID_ENT, IDINICIAL, IDFINAL, DEST, DATEDECL, DATEDECLSpecified, REPROC, REPROCSpecified, DATAINI, DATAINISpecified, DATAFIM, DATAFIMSpecified, null);
        }
        
        /// <remarks/>
        public void GERAARQIMPAsync(string USERTOKEN, string ID_ENT, string IDINICIAL, string IDFINAL, string DEST, System.DateTime DATEDECL, bool DATEDECLSpecified, bool REPROC, bool REPROCSpecified, System.DateTime DATAINI, bool DATAINISpecified, System.DateTime DATAFIM, bool DATAFIMSpecified, object userState) {
            if ((this.GERAARQIMPOperationCompleted == null)) {
                this.GERAARQIMPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGERAARQIMPOperationCompleted);
            }
            this.InvokeAsync("GERAARQIMP", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        IDINICIAL,
                        IDFINAL,
                        DEST,
                        DATEDECL,
                        DATEDECLSpecified,
                        REPROC,
                        REPROCSpecified,
                        DATAINI,
                        DATAINISpecified,
                        DATAFIM,
                        DATAFIMSpecified}, this.GERAARQIMPOperationCompleted, userState);
        }
        
        private void OnGERAARQIMPOperationCompleted(object arg) {
            if ((this.GERAARQIMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GERAARQIMPCompleted(this, new GERAARQIMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/GERAARQIMPARR", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="GERAARQIMPARRRESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GERAARQIMPARRRESULT")]
        public string GERAARQIMPARR(string USERTOKEN, string ID_ENT, NFSID NFSEARR, string DEST, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime DATEDECL, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool DATEDECLSpecified, bool REPROC, [System.Xml.Serialization.XmlIgnoreAttribute()] bool REPROCSpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime DATAINI, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool DATAINISpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime DATAFIM, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool DATAFIMSpecified) {
            object[] results = this.Invoke("GERAARQIMPARR", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        NFSEARR,
                        DEST,
                        DATEDECL,
                        DATEDECLSpecified,
                        REPROC,
                        REPROCSpecified,
                        DATAINI,
                        DATAINISpecified,
                        DATAFIM,
                        DATAFIMSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GERAARQIMPARRAsync(string USERTOKEN, string ID_ENT, NFSID NFSEARR, string DEST, System.DateTime DATEDECL, bool DATEDECLSpecified, bool REPROC, bool REPROCSpecified, System.DateTime DATAINI, bool DATAINISpecified, System.DateTime DATAFIM, bool DATAFIMSpecified) {
            this.GERAARQIMPARRAsync(USERTOKEN, ID_ENT, NFSEARR, DEST, DATEDECL, DATEDECLSpecified, REPROC, REPROCSpecified, DATAINI, DATAINISpecified, DATAFIM, DATAFIMSpecified, null);
        }
        
        /// <remarks/>
        public void GERAARQIMPARRAsync(string USERTOKEN, string ID_ENT, NFSID NFSEARR, string DEST, System.DateTime DATEDECL, bool DATEDECLSpecified, bool REPROC, bool REPROCSpecified, System.DateTime DATAINI, bool DATAINISpecified, System.DateTime DATAFIM, bool DATAFIMSpecified, object userState) {
            if ((this.GERAARQIMPARROperationCompleted == null)) {
                this.GERAARQIMPARROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGERAARQIMPARROperationCompleted);
            }
            this.InvokeAsync("GERAARQIMPARR", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        NFSEARR,
                        DEST,
                        DATEDECL,
                        DATEDECLSpecified,
                        REPROC,
                        REPROCSpecified,
                        DATAINI,
                        DATAINISpecified,
                        DATAFIM,
                        DATAFIMSpecified}, this.GERAARQIMPARROperationCompleted, userState);
        }
        
        private void OnGERAARQIMPARROperationCompleted(object arg) {
            if ((this.GERAARQIMPARRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GERAARQIMPARRCompleted(this, new GERAARQIMPARRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/GETMUNSIAF", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="GETMUNSIAFRESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GETMUNSIAFRESULT")]
        public SIAFLISTRETURN GETMUNSIAF(string USERTOKEN, string CODMUN) {
            object[] results = this.Invoke("GETMUNSIAF", new object[] {
                        USERTOKEN,
                        CODMUN});
            return ((SIAFLISTRETURN)(results[0]));
        }
        
        /// <remarks/>
        public void GETMUNSIAFAsync(string USERTOKEN, string CODMUN) {
            this.GETMUNSIAFAsync(USERTOKEN, CODMUN, null);
        }
        
        /// <remarks/>
        public void GETMUNSIAFAsync(string USERTOKEN, string CODMUN, object userState) {
            if ((this.GETMUNSIAFOperationCompleted == null)) {
                this.GETMUNSIAFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETMUNSIAFOperationCompleted);
            }
            this.InvokeAsync("GETMUNSIAF", new object[] {
                        USERTOKEN,
                        CODMUN}, this.GETMUNSIAFOperationCompleted, userState);
        }
        
        private void OnGETMUNSIAFOperationCompleted(object arg) {
            if ((this.GETMUNSIAFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GETMUNSIAFCompleted(this, new GETMUNSIAFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/MONITORX", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="MONITORXRESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("MONITORXRESULT")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public MONITORNFSE[] MONITORX(string USERTOKEN, string ID_ENT, [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string TIPOMONITOR, string IDINICIAL, string IDFINAL, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime DATADE, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime DATAATE, string HORADE, string HORAATE, [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string TEMPO, [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string DIASPARAEXCLUSAO, string IDNOTAS, string CALLNAME) {
            object[] results = this.Invoke("MONITORX", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        TIPOMONITOR,
                        IDINICIAL,
                        IDFINAL,
                        DATADE,
                        DATAATE,
                        HORADE,
                        HORAATE,
                        TEMPO,
                        DIASPARAEXCLUSAO,
                        IDNOTAS,
                        CALLNAME});
            return ((MONITORNFSE[])(results[0]));
        }
        
        /// <remarks/>
        public void MONITORXAsync(string USERTOKEN, string ID_ENT, string TIPOMONITOR, string IDINICIAL, string IDFINAL, System.DateTime DATADE, System.DateTime DATAATE, string HORADE, string HORAATE, string TEMPO, string DIASPARAEXCLUSAO, string IDNOTAS, string CALLNAME) {
            this.MONITORXAsync(USERTOKEN, ID_ENT, TIPOMONITOR, IDINICIAL, IDFINAL, DATADE, DATAATE, HORADE, HORAATE, TEMPO, DIASPARAEXCLUSAO, IDNOTAS, CALLNAME, null);
        }
        
        /// <remarks/>
        public void MONITORXAsync(string USERTOKEN, string ID_ENT, string TIPOMONITOR, string IDINICIAL, string IDFINAL, System.DateTime DATADE, System.DateTime DATAATE, string HORADE, string HORAATE, string TEMPO, string DIASPARAEXCLUSAO, string IDNOTAS, string CALLNAME, object userState) {
            if ((this.MONITORXOperationCompleted == null)) {
                this.MONITORXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMONITORXOperationCompleted);
            }
            this.InvokeAsync("MONITORX", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        TIPOMONITOR,
                        IDINICIAL,
                        IDFINAL,
                        DATADE,
                        DATAATE,
                        HORADE,
                        HORAATE,
                        TEMPO,
                        DIASPARAEXCLUSAO,
                        IDNOTAS,
                        CALLNAME}, this.MONITORXOperationCompleted, userState);
        }
        
        private void OnMONITORXOperationCompleted(object arg) {
            if ((this.MONITORXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MONITORXCompleted(this, new MONITORXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/PROCIMPNFSETXT", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="PROCIMPNFSETXTRESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PROCIMPNFSETXTRESULT")]
        public string PROCIMPNFSETXT(string USERTOKEN, string ID_ENT, string CODMUN, string ARQTXT, string DEST) {
            object[] results = this.Invoke("PROCIMPNFSETXT", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN,
                        ARQTXT,
                        DEST});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PROCIMPNFSETXTAsync(string USERTOKEN, string ID_ENT, string CODMUN, string ARQTXT, string DEST) {
            this.PROCIMPNFSETXTAsync(USERTOKEN, ID_ENT, CODMUN, ARQTXT, DEST, null);
        }
        
        /// <remarks/>
        public void PROCIMPNFSETXTAsync(string USERTOKEN, string ID_ENT, string CODMUN, string ARQTXT, string DEST, object userState) {
            if ((this.PROCIMPNFSETXTOperationCompleted == null)) {
                this.PROCIMPNFSETXTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPROCIMPNFSETXTOperationCompleted);
            }
            this.InvokeAsync("PROCIMPNFSETXT", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN,
                        ARQTXT,
                        DEST}, this.PROCIMPNFSETXTOperationCompleted, userState);
        }
        
        private void OnPROCIMPNFSETXTOperationCompleted(object arg) {
            if ((this.PROCIMPNFSETXTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PROCIMPNFSETXTCompleted(this, new PROCIMPNFSETXTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/REMESSANFSE001", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="REMESSANFSE001RESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("REMESSANFSE001RESULT")]
        public NFSESID REMESSANFSE001(string USERTOKEN, string ID_ENT, NFSE NFSE, string CODMUN, bool REPROC, [System.Xml.Serialization.XmlIgnoreAttribute()] bool REPROCSpecified, bool RETESTRUT, [System.Xml.Serialization.XmlIgnoreAttribute()] bool RETESTRUTSpecified) {
            object[] results = this.Invoke("REMESSANFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        NFSE,
                        CODMUN,
                        REPROC,
                        REPROCSpecified,
                        RETESTRUT,
                        RETESTRUTSpecified});
            return ((NFSESID)(results[0]));
        }
        
        /// <remarks/>
        public void REMESSANFSE001Async(string USERTOKEN, string ID_ENT, NFSE NFSE, string CODMUN, bool REPROC, bool REPROCSpecified, bool RETESTRUT, bool RETESTRUTSpecified) {
            this.REMESSANFSE001Async(USERTOKEN, ID_ENT, NFSE, CODMUN, REPROC, REPROCSpecified, RETESTRUT, RETESTRUTSpecified, null);
        }
        
        /// <remarks/>
        public void REMESSANFSE001Async(string USERTOKEN, string ID_ENT, NFSE NFSE, string CODMUN, bool REPROC, bool REPROCSpecified, bool RETESTRUT, bool RETESTRUTSpecified, object userState) {
            if ((this.REMESSANFSE001OperationCompleted == null)) {
                this.REMESSANFSE001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnREMESSANFSE001OperationCompleted);
            }
            this.InvokeAsync("REMESSANFSE001", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        NFSE,
                        CODMUN,
                        REPROC,
                        REPROCSpecified,
                        RETESTRUT,
                        RETESTRUTSpecified}, this.REMESSANFSE001OperationCompleted, userState);
        }
        
        private void OnREMESSANFSE001OperationCompleted(object arg) {
            if ((this.REMESSANFSE001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.REMESSANFSE001Completed(this, new REMESSANFSE001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/RETMUNCANC", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="RETMUNCANCRESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RETMUNCANCRESULT")]
        public string RETMUNCANC(string USERTOKEN) {
            object[] results = this.Invoke("RETMUNCANC", new object[] {
                        USERTOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RETMUNCANCAsync(string USERTOKEN) {
            this.RETMUNCANCAsync(USERTOKEN, null);
        }
        
        /// <remarks/>
        public void RETMUNCANCAsync(string USERTOKEN, object userState) {
            if ((this.RETMUNCANCOperationCompleted == null)) {
                this.RETMUNCANCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRETMUNCANCOperationCompleted);
            }
            this.InvokeAsync("RETMUNCANC", new object[] {
                        USERTOKEN}, this.RETMUNCANCOperationCompleted, userState);
        }
        
        private void OnRETMUNCANCOperationCompleted(object arg) {
            if ((this.RETMUNCANCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RETMUNCANCCompleted(this, new RETMUNCANCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/RETMUNSERV", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="RETMUNSERVRESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RETMUNSERVRESULT")]
        public string RETMUNSERV(string USERTOKEN, string CSERVICO) {
            object[] results = this.Invoke("RETMUNSERV", new object[] {
                        USERTOKEN,
                        CSERVICO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RETMUNSERVAsync(string USERTOKEN, string CSERVICO) {
            this.RETMUNSERVAsync(USERTOKEN, CSERVICO, null);
        }
        
        /// <remarks/>
        public void RETMUNSERVAsync(string USERTOKEN, string CSERVICO, object userState) {
            if ((this.RETMUNSERVOperationCompleted == null)) {
                this.RETMUNSERVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRETMUNSERVOperationCompleted);
            }
            this.InvokeAsync("RETMUNSERV", new object[] {
                        USERTOKEN,
                        CSERVICO}, this.RETMUNSERVOperationCompleted, userState);
        }
        
        private void OnRETMUNSERVOperationCompleted(object arg) {
            if ((this.RETMUNSERVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RETMUNSERVCompleted(this, new RETMUNSERVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/RETORNANFSE", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="RETORNANFSERESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RETORNANFSERESULT")]
        public NFS5 RETORNANFSE(string USERTOKEN, string ID_ENT, NFSID NFSEID, [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string DIASPARAEXCLUSAO) {
            object[] results = this.Invoke("RETORNANFSE", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        NFSEID,
                        DIASPARAEXCLUSAO});
            return ((NFS5)(results[0]));
        }
        
        /// <remarks/>
        public void RETORNANFSEAsync(string USERTOKEN, string ID_ENT, NFSID NFSEID, string DIASPARAEXCLUSAO) {
            this.RETORNANFSEAsync(USERTOKEN, ID_ENT, NFSEID, DIASPARAEXCLUSAO, null);
        }
        
        /// <remarks/>
        public void RETORNANFSEAsync(string USERTOKEN, string ID_ENT, NFSID NFSEID, string DIASPARAEXCLUSAO, object userState) {
            if ((this.RETORNANFSEOperationCompleted == null)) {
                this.RETORNANFSEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRETORNANFSEOperationCompleted);
            }
            this.InvokeAsync("RETORNANFSE", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        NFSEID,
                        DIASPARAEXCLUSAO}, this.RETORNANFSEOperationCompleted, userState);
        }
        
        private void OnRETORNANFSEOperationCompleted(object arg) {
            if ((this.RETORNANFSECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RETORNANFSECompleted(this, new RETORNANFSECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/SCHEMAX", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="SCHEMAXRESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("SCHEMAXRESULT")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public NFSES4[] SCHEMAX(string USERTOKEN, string ID_ENT, string CODMUN, NF NF, bool RETESTRUT, [System.Xml.Serialization.XmlIgnoreAttribute()] bool RETESTRUTSpecified) {
            object[] results = this.Invoke("SCHEMAX", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN,
                        NF,
                        RETESTRUT,
                        RETESTRUTSpecified});
            return ((NFSES4[])(results[0]));
        }
        
        /// <remarks/>
        public void SCHEMAXAsync(string USERTOKEN, string ID_ENT, string CODMUN, NF NF, bool RETESTRUT, bool RETESTRUTSpecified) {
            this.SCHEMAXAsync(USERTOKEN, ID_ENT, CODMUN, NF, RETESTRUT, RETESTRUTSpecified, null);
        }
        
        /// <remarks/>
        public void SCHEMAXAsync(string USERTOKEN, string ID_ENT, string CODMUN, NF NF, bool RETESTRUT, bool RETESTRUTSpecified, object userState) {
            if ((this.SCHEMAXOperationCompleted == null)) {
                this.SCHEMAXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCHEMAXOperationCompleted);
            }
            this.InvokeAsync("SCHEMAX", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN,
                        NF,
                        RETESTRUT,
                        RETESTRUTSpecified}, this.SCHEMAXOperationCompleted, userState);
        }
        
        private void OnSCHEMAXOperationCompleted(object arg) {
            if ((this.SCHEMAXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCHEMAXCompleted(this, new SCHEMAXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/STATUSNFSE", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="STATUSNFSERESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("STATUSNFSERESULT")]
        public string STATUSNFSE(string USERTOKEN, string IDTHREAD) {
            object[] results = this.Invoke("STATUSNFSE", new object[] {
                        USERTOKEN,
                        IDTHREAD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void STATUSNFSEAsync(string USERTOKEN, string IDTHREAD) {
            this.STATUSNFSEAsync(USERTOKEN, IDTHREAD, null);
        }
        
        /// <remarks/>
        public void STATUSNFSEAsync(string USERTOKEN, string IDTHREAD, object userState) {
            if ((this.STATUSNFSEOperationCompleted == null)) {
                this.STATUSNFSEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSTATUSNFSEOperationCompleted);
            }
            this.InvokeAsync("STATUSNFSE", new object[] {
                        USERTOKEN,
                        IDTHREAD}, this.STATUSNFSEOperationCompleted, userState);
        }
        
        private void OnSTATUSNFSEOperationCompleted(object arg) {
            if ((this.STATUSNFSECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.STATUSNFSECompleted(this, new STATUSNFSECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/TSSCONSRPSNFSE", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="TSSCONSRPSNFSERESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("TSSCONSRPSNFSERESULT")]
        public TSSCONSRPSNFSERETURN TSSCONSRPSNFSE(string USERTOKEN, string ID_ENT, string CODMUN, string TSSID, string NUMERORPS, string SERIERPS, string TIPORPS) {
            object[] results = this.Invoke("TSSCONSRPSNFSE", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN,
                        TSSID,
                        NUMERORPS,
                        SERIERPS,
                        TIPORPS});
            return ((TSSCONSRPSNFSERETURN)(results[0]));
        }
        
        /// <remarks/>
        public void TSSCONSRPSNFSEAsync(string USERTOKEN, string ID_ENT, string CODMUN, string TSSID, string NUMERORPS, string SERIERPS, string TIPORPS) {
            this.TSSCONSRPSNFSEAsync(USERTOKEN, ID_ENT, CODMUN, TSSID, NUMERORPS, SERIERPS, TIPORPS, null);
        }
        
        /// <remarks/>
        public void TSSCONSRPSNFSEAsync(string USERTOKEN, string ID_ENT, string CODMUN, string TSSID, string NUMERORPS, string SERIERPS, string TIPORPS, object userState) {
            if ((this.TSSCONSRPSNFSEOperationCompleted == null)) {
                this.TSSCONSRPSNFSEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTSSCONSRPSNFSEOperationCompleted);
            }
            this.InvokeAsync("TSSCONSRPSNFSE", new object[] {
                        USERTOKEN,
                        ID_ENT,
                        CODMUN,
                        TSSID,
                        NUMERORPS,
                        SERIERPS,
                        TIPORPS}, this.TSSCONSRPSNFSEOperationCompleted, userState);
        }
        
        private void OnTSSCONSRPSNFSEOperationCompleted(object arg) {
            if ((this.TSSCONSRPSNFSECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TSSCONSRPSNFSECompleted(this, new TSSCONSRPSNFSECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.totvs.com.br/nfse001.apw/VERSAONFSE001", RequestNamespace="http://webservices.totvs.com.br/nfse001.apw", ResponseElementName="VERSAONFSE001RESPONSE", ResponseNamespace="http://webservices.totvs.com.br/nfse001.apw", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VERSAONFSE001RESULT")]
        public string VERSAONFSE001(string USERTOKEN, string CODMUN) {
            object[] results = this.Invoke("VERSAONFSE001", new object[] {
                        USERTOKEN,
                        CODMUN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VERSAONFSE001Async(string USERTOKEN, string CODMUN) {
            this.VERSAONFSE001Async(USERTOKEN, CODMUN, null);
        }
        
        /// <remarks/>
        public void VERSAONFSE001Async(string USERTOKEN, string CODMUN, object userState) {
            if ((this.VERSAONFSE001OperationCompleted == null)) {
                this.VERSAONFSE001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnVERSAONFSE001OperationCompleted);
            }
            this.InvokeAsync("VERSAONFSE001", new object[] {
                        USERTOKEN,
                        CODMUN}, this.VERSAONFSE001OperationCompleted, userState);
        }
        
        private void OnVERSAONFSE001OperationCompleted(object arg) {
            if ((this.VERSAONFSE001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VERSAONFSE001Completed(this, new VERSAONFSE001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSE {
        
        private NFSES1[] nOTASField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public NFSES1[] NOTAS {
            get {
                return this.nOTASField;
            }
            set {
                this.nOTASField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSES1 {
        
        private string cODCANCField;
        
        private string cODMUNField;
        
        private string idField;
        
        private string nFSECANCELADAField;
        
        private bool rEPROCField;
        
        private bool rEPROCFieldSpecified;
        
        private bool rEPROCWSField;
        
        private bool rEPROCWSFieldSpecified;
        
        private byte[] xMLField;
        
        /// <remarks/>
        public string CODCANC {
            get {
                return this.cODCANCField;
            }
            set {
                this.cODCANCField = value;
            }
        }
        
        /// <remarks/>
        public string CODMUN {
            get {
                return this.cODMUNField;
            }
            set {
                this.cODMUNField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string NFSECANCELADA {
            get {
                return this.nFSECANCELADAField;
            }
            set {
                this.nFSECANCELADAField = value;
            }
        }
        
        /// <remarks/>
        public bool REPROC {
            get {
                return this.rEPROCField;
            }
            set {
                this.rEPROCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool REPROCSpecified {
            get {
                return this.rEPROCFieldSpecified;
            }
            set {
                this.rEPROCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool REPROCWS {
            get {
                return this.rEPROCWSField;
            }
            set {
                this.rEPROCWSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool REPROCWSSpecified {
            get {
                return this.rEPROCWSFieldSpecified;
            }
            set {
                this.rEPROCWSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] XML {
            get {
                return this.xMLField;
            }
            set {
                this.xMLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class TSSCONSRPSNFSERETURN {
        
        private string aMBIENTEField;
        
        private string cODIGOAUTHField;
        
        private string idField;
        
        private string nOTAField;
        
        private string rPSField;
        
        private string sERIERPSField;
        
        private string sTATUSNFSEField;
        
        private string xMLRETPREFField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string AMBIENTE {
            get {
                return this.aMBIENTEField;
            }
            set {
                this.aMBIENTEField = value;
            }
        }
        
        /// <remarks/>
        public string CODIGOAUTH {
            get {
                return this.cODIGOAUTHField;
            }
            set {
                this.cODIGOAUTHField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string NOTA {
            get {
                return this.nOTAField;
            }
            set {
                this.nOTAField = value;
            }
        }
        
        /// <remarks/>
        public string RPS {
            get {
                return this.rPSField;
            }
            set {
                this.rPSField = value;
            }
        }
        
        /// <remarks/>
        public string SERIERPS {
            get {
                return this.sERIERPSField;
            }
            set {
                this.sERIERPSField = value;
            }
        }
        
        /// <remarks/>
        public string STATUSNFSE {
            get {
                return this.sTATUSNFSEField;
            }
            set {
                this.sTATUSNFSEField = value;
            }
        }
        
        /// <remarks/>
        public string XMLRETPREF {
            get {
                return this.xMLRETPREFField;
            }
            set {
                this.xMLRETPREFField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSES4 {
        
        private string idField;
        
        private string mENSAGEMField;
        
        private byte[] xMLField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string MENSAGEM {
            get {
                return this.mENSAGEMField;
            }
            set {
                this.mENSAGEMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] XML {
            get {
                return this.xMLField;
            }
            set {
                this.xMLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NF001 {
        
        private string idField;
        
        private byte[] xMLField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] XML {
            get {
                return this.xMLField;
            }
            set {
                this.xMLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NF {
        
        private NF001[] nOTASField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public NF001[] NOTAS {
            get {
                return this.nOTASField;
            }
            set {
                this.nOTASField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSEPROTOCOLO {
        
        private string pROTOCOLOField;
        
        private string xMLField;
        
        private string xMLCOMPLField;
        
        private string xMLERPField;
        
        private string xMLPROTField;
        
        /// <remarks/>
        public string PROTOCOLO {
            get {
                return this.pROTOCOLOField;
            }
            set {
                this.pROTOCOLOField = value;
            }
        }
        
        /// <remarks/>
        public string XML {
            get {
                return this.xMLField;
            }
            set {
                this.xMLField = value;
            }
        }
        
        /// <remarks/>
        public string XMLCOMPL {
            get {
                return this.xMLCOMPLField;
            }
            set {
                this.xMLCOMPLField = value;
            }
        }
        
        /// <remarks/>
        public string XMLERP {
            get {
                return this.xMLERPField;
            }
            set {
                this.xMLERPField = value;
            }
        }
        
        /// <remarks/>
        public string XMLPROT {
            get {
                return this.xMLPROTField;
            }
            set {
                this.xMLPROTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSES5 {
        
        private string idField;
        
        private NFSEPROTOCOLO nFEField;
        
        private NFSEPROTOCOLO nFECANCELADAField;
        
        private string nUMNSEField;
        
        private string xMLRETTSSField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public NFSEPROTOCOLO NFE {
            get {
                return this.nFEField;
            }
            set {
                this.nFEField = value;
            }
        }
        
        /// <remarks/>
        public NFSEPROTOCOLO NFECANCELADA {
            get {
                return this.nFECANCELADAField;
            }
            set {
                this.nFECANCELADAField = value;
            }
        }
        
        /// <remarks/>
        public string NUMNSE {
            get {
                return this.nUMNSEField;
            }
            set {
                this.nUMNSEField = value;
            }
        }
        
        /// <remarks/>
        public string XMLRETTSS {
            get {
                return this.xMLRETTSSField;
            }
            set {
                this.xMLRETTSSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFS5 {
        
        private NFSES5[] nOTASField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public NFSES5[] NOTAS {
            get {
                return this.nOTASField;
            }
            set {
                this.nOTASField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSEXML {
        
        private string xMLField;
        
        private string xMLCOMPLField;
        
        private string xMLERPField;
        
        private string xMLPROTField;
        
        /// <remarks/>
        public string XML {
            get {
                return this.xMLField;
            }
            set {
                this.xMLField = value;
            }
        }
        
        /// <remarks/>
        public string XMLCOMPL {
            get {
                return this.xMLCOMPLField;
            }
            set {
                this.xMLCOMPLField = value;
            }
        }
        
        /// <remarks/>
        public string XMLERP {
            get {
                return this.xMLERPField;
            }
            set {
                this.xMLERPField = value;
            }
        }
        
        /// <remarks/>
        public string XMLPROT {
            get {
                return this.xMLPROTField;
            }
            set {
                this.xMLPROTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class ERROSLOTE {
        
        private string cODIGOField;
        
        private string mENSAGEMField;
        
        /// <remarks/>
        public string CODIGO {
            get {
                return this.cODIGOField;
            }
            set {
                this.cODIGOField = value;
            }
        }
        
        /// <remarks/>
        public string MENSAGEM {
            get {
                return this.mENSAGEMField;
            }
            set {
                this.mENSAGEMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class MONITORNFSE {
        
        private string aMBIENTEField;
        
        private ERROSLOTE[] eRROField;
        
        private string idField;
        
        private string mODALIDADEField;
        
        private NFSEXML nFEField;
        
        private NFSEXML nFECANCELADAField;
        
        private string nOTAField;
        
        private string pROTOCOLOField;
        
        private string rECOMENDACAOField;
        
        private string rPSField;
        
        private string sTATUSField;
        
        private string sTATUSCANCField;
        
        private byte[] uRLNFSEField;
        
        private string xMLRETTSSField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string AMBIENTE {
            get {
                return this.aMBIENTEField;
            }
            set {
                this.aMBIENTEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ERROSLOTE[] ERRO {
            get {
                return this.eRROField;
            }
            set {
                this.eRROField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string MODALIDADE {
            get {
                return this.mODALIDADEField;
            }
            set {
                this.mODALIDADEField = value;
            }
        }
        
        /// <remarks/>
        public NFSEXML NFE {
            get {
                return this.nFEField;
            }
            set {
                this.nFEField = value;
            }
        }
        
        /// <remarks/>
        public NFSEXML NFECANCELADA {
            get {
                return this.nFECANCELADAField;
            }
            set {
                this.nFECANCELADAField = value;
            }
        }
        
        /// <remarks/>
        public string NOTA {
            get {
                return this.nOTAField;
            }
            set {
                this.nOTAField = value;
            }
        }
        
        /// <remarks/>
        public string PROTOCOLO {
            get {
                return this.pROTOCOLOField;
            }
            set {
                this.pROTOCOLOField = value;
            }
        }
        
        /// <remarks/>
        public string RECOMENDACAO {
            get {
                return this.rECOMENDACAOField;
            }
            set {
                this.rECOMENDACAOField = value;
            }
        }
        
        /// <remarks/>
        public string RPS {
            get {
                return this.rPSField;
            }
            set {
                this.rPSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string STATUS {
            get {
                return this.sTATUSField;
            }
            set {
                this.sTATUSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string STATUSCANC {
            get {
                return this.sTATUSCANCField;
            }
            set {
                this.sTATUSCANCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] URLNFSE {
            get {
                return this.uRLNFSEField;
            }
            set {
                this.uRLNFSEField = value;
            }
        }
        
        /// <remarks/>
        public string XMLRETTSS {
            get {
                return this.xMLRETTSSField;
            }
            set {
                this.xMLRETTSSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class SIAFLISTRETURN {
        
        private string cODSERVField;
        
        private string cODSIAFField;
        
        /// <remarks/>
        public string CODSERV {
            get {
                return this.cODSERVField;
            }
            set {
                this.cODSERVField = value;
            }
        }
        
        /// <remarks/>
        public string CODSIAF {
            get {
                return this.cODSIAFField;
            }
            set {
                this.cODSIAFField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSESID1 {
        
        private string idField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSID {
        
        private NFSESID1[] nOTASField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public NFSESID1[] NOTAS {
            get {
                return this.nOTASField;
            }
            set {
                this.nOTASField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSES2 {
        
        private string cODMUNField;
        
        private string nUMNOTAField;
        
        private string sITUACAOField;
        
        private string sTATUS1Field;
        
        private string sTATUS2Field;
        
        private byte[] xMLField;
        
        /// <remarks/>
        public string CODMUN {
            get {
                return this.cODMUNField;
            }
            set {
                this.cODMUNField = value;
            }
        }
        
        /// <remarks/>
        public string NUMNOTA {
            get {
                return this.nUMNOTAField;
            }
            set {
                this.nUMNOTAField = value;
            }
        }
        
        /// <remarks/>
        public string SITUACAO {
            get {
                return this.sITUACAOField;
            }
            set {
                this.sITUACAOField = value;
            }
        }
        
        /// <remarks/>
        public string STATUS1 {
            get {
                return this.sTATUS1Field;
            }
            set {
                this.sTATUS1Field = value;
            }
        }
        
        /// <remarks/>
        public string STATUS2 {
            get {
                return this.sTATUS2Field;
            }
            set {
                this.sTATUS2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] XML {
            get {
                return this.xMLField;
            }
            set {
                this.xMLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSE2 {
        
        private NFSES2[] nOTASField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public NFSES2[] NOTAS {
            get {
                return this.nOTASField;
            }
            set {
                this.nOTASField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.totvs.com.br/nfse001.apw")]
    public partial class NFSESID {
        
        private string[] idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("STRING", IsNullable=false)]
        public string[] ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CANCELANFSE001CompletedEventHandler(object sender, CANCELANFSE001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CANCELANFSE001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CANCELANFSE001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NFSESID Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NFSESID)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CFGAMBNFSE001CompletedEventHandler(object sender, CFGAMBNFSE001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFGAMBNFSE001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFGAMBNFSE001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CFGNFSECERTPFXCompletedEventHandler(object sender, CFGNFSECERTPFXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFGNFSECERTPFXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFGNFSECERTPFXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CFGREADYXCompletedEventHandler(object sender, CFGREADYXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFGREADYXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFGREADYXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CONSLOTENFSE001CompletedEventHandler(object sender, CONSLOTENFSE001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CONSLOTENFSE001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CONSLOTENFSE001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CONSNOTANFSE001CompletedEventHandler(object sender, CONSNOTANFSE001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CONSNOTANFSE001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CONSNOTANFSE001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NFSE2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NFSE2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CONSSEQNFSE001CompletedEventHandler(object sender, CONSSEQNFSE001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CONSSEQNFSE001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CONSSEQNFSE001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GERAARQIMPCompletedEventHandler(object sender, GERAARQIMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GERAARQIMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GERAARQIMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GERAARQIMPARRCompletedEventHandler(object sender, GERAARQIMPARRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GERAARQIMPARRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GERAARQIMPARRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GETMUNSIAFCompletedEventHandler(object sender, GETMUNSIAFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GETMUNSIAFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GETMUNSIAFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SIAFLISTRETURN Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SIAFLISTRETURN)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void MONITORXCompletedEventHandler(object sender, MONITORXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MONITORXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MONITORXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MONITORNFSE[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MONITORNFSE[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PROCIMPNFSETXTCompletedEventHandler(object sender, PROCIMPNFSETXTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PROCIMPNFSETXTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PROCIMPNFSETXTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void REMESSANFSE001CompletedEventHandler(object sender, REMESSANFSE001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class REMESSANFSE001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal REMESSANFSE001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NFSESID Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NFSESID)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RETMUNCANCCompletedEventHandler(object sender, RETMUNCANCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RETMUNCANCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RETMUNCANCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RETMUNSERVCompletedEventHandler(object sender, RETMUNSERVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RETMUNSERVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RETMUNSERVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RETORNANFSECompletedEventHandler(object sender, RETORNANFSECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RETORNANFSECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RETORNANFSECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NFS5 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NFS5)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SCHEMAXCompletedEventHandler(object sender, SCHEMAXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCHEMAXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCHEMAXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NFSES4[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NFSES4[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void STATUSNFSECompletedEventHandler(object sender, STATUSNFSECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class STATUSNFSECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal STATUSNFSECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void TSSCONSRPSNFSECompletedEventHandler(object sender, TSSCONSRPSNFSECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TSSCONSRPSNFSECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TSSCONSRPSNFSECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TSSCONSRPSNFSERETURN Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TSSCONSRPSNFSERETURN)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void VERSAONFSE001CompletedEventHandler(object sender, VERSAONFSE001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VERSAONFSE001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VERSAONFSE001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591