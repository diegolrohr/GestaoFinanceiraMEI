<script>

    function inputSaldoInventariado(value) {
        var attr = { "type": "text", "id": "saldoInventariado", "name": "saldoInventariado", "value": value, "style": "margin-right: 11px", "class": "numbers" };

        if ($('input#inventarioStatus').val() === "Finalizado") {
            $('a.fly01-dt-menu').parent().hide();
            attr.disabled = 'disabled';
        }
            

        return createElem("input", attr);
    };

    function inputHiddenId(id, value) {
        var attr = { "type": "hidden", "id": id, "name": id, "value": value };

        return createElem("input", attr);
    };

    function submitButton() {
        var attr = { "type": "submit", "class": "btn btn-narrow valid", "id": "" }

        if ($('input#inventarioStatus').val() === "Finalizado")
            attr.disabled = 'disabled';

        return createElem("button", attr,
              createElem("i", {"class":"material-icons"}, "save")
            );
    };

    function createForm(row) {
        var action = "@Url.Action("Edit", "InventarioItem")" + "/{" + row.id + "}";

        var formAttr = { 
            "method": "POST", "action": action,
            "class": "saldoInventariadoForm valign-wrapper right col s12",
            "style": "padding-left: 0;"
        }

        return createElem("form", formAttr,[ //Inner Content
                    inputHiddenId("produtoId", row.produtoIdRow),
                    inputHiddenId("inventarioId", row.inventarioIdRow),
                    inputSaldoInventariado(row.saldoInventariado),
                    submitButton()
                ]);
    };

    function fnRenderSaldoInventariado(data, type, row, meta) {
        
        return createForm(row).outerHTML;
    };

    $(document).off("submit", "form.saldoInventariadoForm");
    $(document).on("submit", "form.saldoInventariadoForm", function (e) {
        var that = $(this);
        that.loading("start");
        e.preventDefault();
        if (!that.valid()) {
            that.loading("stop");
            return false;
        }
        else {
            var formData = that.serializeObject();
            
            formData.saldoInventariado = parseFloat(formData.saldoInventariado);
            
            if (formData.saldoInventariado < 0) {
                fly01.toast("Novo Saldo não pode ser negativo.", "error");
                that.loading("stop");
                return false;
            }

            $.ajax({
                url: that.attr("action"),
                type: that.attr("method"),
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(formData),
                success: function success(data) {
                    if (data.success) {
                        var strMsg = "Saldo atualizado com sucesso.";
                        if (data.message !== "")
                            strMsg = data.message;
                        fly01.toast(strMsg, "success");
                        that.loading("stop");
                        fly01._.dtInventarioItem.refresh();
                    } else {
                        that.loading("stop");

                        try {
                            var jsonMessage = JSON.parse(data.message);
                            var validator = that.validate();
                            var errors = {};
                            jsonMessage.innerMessage.filter(x => ((x.dataField || "") != "")).forEach(element => {
                                if ($("#" + element.dataField).length > 0) {
                                    errors[element.dataField] = element.message;
                                }
                                else {
                                    fly01.toast(element.message, "error", 8000);
                                }
                            });
                            validator.showErrors(errors);
                            jsonMessage.innerMessage.filter(x => ((x.dataField || "") == "")).forEach(element => {
                                fly01.toast(element.message, "error", 8000);
                            });
                        } catch (e) {
                            fly01.toast(data.message, "error");
                        }
                    }
                    that.loading("stop");
                },
                error: function error(jXHR, textStatus) {
                    fly01.toast(textStatus, "error");
                    that.loading("stop");
                }
            });
        }
    });

</script>