
<script>
    @Html.Partial("Functions/_fnMain");
    function fnAtualizaGrid() {
        fnOverrideSubmit();

        if ($("form#fly01mdlfrm").valid()) {
            $("form#fly01mdlfrm").submit();
        }
    }

    function fnOverrideSubmit() {

         var myForm = "form#fly01mdlfrm";

         $(myForm).off("submit");
         $(myForm).on("submit", function (e) {
            var that = $(myForm)

            if (!that.valid())
                return false;
            e.preventDefault();
            fly01.loading.start();
            var formData = that.serializeObject();
            $.ajax({
                type: that.attr("method"),
                contentType: 'application/json',
                dataType: 'json',
                url: that.attr("action"),
                data: JSON.stringify(formData),
                success: function (data) {
                    if (data.success) {
                        fly01.toast(data.message, "success");

                        var id = $('#contaFinanceiraId').val();
                        var dtId = $("input[value=\"" + id + "\"]").closest('table').attr('id');

                        fly01._[dtId].refresh();

                        fly01._.fly01mdlfrm.close()

                    } else {
                        fly01.loading.stop();
                        try {
                            var jsonMessage = JSON.parse(data.message);
                            var validator = that.validate();
                            var errors = {};
                            jsonMessage.innerMessage.filter(x => ((x.dataField || "") != "")).forEach(element => {
                                if ($("#" + element.dataField).length > 0) {
                                    errors[element.dataField] = element.message;
                                }
                                else {
                                    fly01.toast(element.message, "error", 8000);
                                }
                            });
                            validator.showErrors(errors);
                            jsonMessage.innerMessage.filter(x => ((x.dataField || "") == "")).forEach(element => {
                                fly01.toast(element.message, "error", 8000);
                            });
                        } catch (e) {
                            fly01.toast(data.message, "error");
                        }
                    }
                    fly01.loading.stop();
                },
                error: function error(jXHR, textStatus) {
                    fly01.toast(textStatus, "error");
                    fly01.loading.stop();
                }
            })
        });
    };


</script>
