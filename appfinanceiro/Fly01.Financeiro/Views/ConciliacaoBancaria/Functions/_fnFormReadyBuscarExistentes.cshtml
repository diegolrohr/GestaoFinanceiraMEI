<script>
    @Html.Partial("Functions/_fnMain");

    var arrayConciliacoes = [];

    function fnAtualizaValorSelecionados(valorAcumulado) {
        var valorLancamentoExtrato = parseFloat($('input#valor').val().replace("R$ ", "").replace("R$", "").replace(".", "").replace(",", ".").replace("-", ""));

        $('input#somaValoresSelecionados').val(valorAcumulado);
        fly01.core.updateTextFields();
        $('input#somaValoresSelecionados').css('color', '');
        $('#save').attr('disabled', 'disabled');

        if (valorAcumulado == valorLancamentoExtrato) {
            $('#somaValoresSelecionados').css('color', 'green');
            fly01.toast("A soma dos valores conciliados está de acordo ao valor do lançamento", "info");
            $('#save').removeAttr('disabled');
        }
        else if (valorAcumulado > valorLancamentoExtrato) {
            $('#somaValoresSelecionados').css('color', 'red');
            $('#save').attr('disabled', 'disabled');
        }
        else if (valorAcumulado <= 0) {
            $('#somaValoresSelecionados').css('color', 'red');
            $('#save').attr('disabled', 'disabled');
        }
    }

    function getId() {
        return $('input#id').val();
    }

    function getValorSomaSelecionados() {
        var somaValores = $('#somaValoresSelecionados').val().replace("R$ ", "").replace(".", "").replace(",", ".");
        var result = parseFloat(somaValores);
        return result;
    }

    //ao atualizar valor conciliado, alterar o array e somas
    function setupGridSelectEvents() {
        fly01._.dtContasExistentes.on("select", function (e, dt, type, indexes) {
            if (type !== undefined) {
                var valorAcumulado = getValorSomaSelecionados();
                var rowData = fly01._.dtContasExistentes.rows(indexes).data().toArray();
                var valorConciliado = parseFloat(rowData[0].valorConciliado.replace("R$ ", "").replace("R$", "").replace(".", "").replace(",", "."));

                var index = arrayConciliacoes.findIndex(x => x.contaFinanceiraId == rowData[0].id);
                if (index == -1) {
                    arrayConciliacoes.push({
                        conciliacaoBancariaItemId: getId(),
                        contaFinanceiraId: rowData[0].id,
                        valorConciliado: valorConciliado
                    });
                    valorAcumulado += valorConciliado;

                    fnAtualizaValorSelecionados(valorAcumulado);
                }
            }

        }).on('deselect', function (e, dt, type, indexes) {
            if (type !== undefined) {

                var valorAcumulado = getValorSomaSelecionados();
                var rowData = fly01._.dtContasExistentes.rows(indexes).data().toArray();

                var index = arrayConciliacoes.findIndex(x => x.contaFinanceiraId == rowData[0].id);
                if (index !== -1) {//se achou remove
                    var valorConciliado = arrayConciliacoes[index].valorConciliado;

                    var row = fly01._.dtContasExistentes.row(indexes);
                    //volta o valor original
                    $("input.valorParcial[data-id=\"" + row.data().id + "\"]").val(row.data().valorConciliado.replace("R$ ", "").replace("R$", "").replace(".", "").replace(",", "."));

                    arrayConciliacoes.splice(index, 1);
                    valorAcumulado -= valorConciliado;

                    fnAtualizaValorSelecionados(valorAcumulado);
                }
            }
        });
    }

    function fnBindOverrideSubmit() {
        //substitui comportamento normal
        $("form#fly01frm").off("submit");
        $("form#fly01frm").on("submit", function (e) {
            $('body').removeClass('loaded');
            e.preventDefault();
            if (!$(this).valid()) {
                $('body').addClass('loaded');
                return false;
            }

            var jsonData = $(this).serializeObject();
            //arrayConciliacoes.push(
            //        {
            //            conciliacaoBancariaItemId: '2cd8ae42-299e-4556-86b3-d988d5721754',
            //            contaFinanceiraId: '90bfb023-d2ce-4e1e-bd7f-034020602033',
            //            valorConciliado: 20.25
            //        });

            jsonData.conciliacaoBancariaItemContasFinanceiras = arrayConciliacoes

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: $(this).attr("action"),
                data: JSON.stringify({ 'conciliacaoBancariaItem': jsonData }),
                success: function success(data) {
                    if (data.success) {
                        var strMsg = "Cadastrado com sucesso.";
                        if (data.message !== "") strMsg = data.message;
                        fly01.toast(strMsg, "success");

                        //voltar para edição
                        fnEditar($('#conciliacaoBancariaId').val());
                    } else {
                        fly01.toast(data.message, "error");
                    }
                    $('body').addClass('loaded');
                },
                error: function error(jXHR, textStatus) {
                    fly01.toast(textStatus, "error");
                    $('body').addClass('loaded');
                }
            });
        });
    }

    function fnFormReadyBuscarExistentes() {
        $('#save').attr('disabled', 'disabled');
        $('#somaValoresSelecionados').val(0);
        setupGridSelectEvents();
        fnBindOverrideSubmit();
    }

    function fndtContasExistentesRowCallback(row, data) {
        $("#" + config.id + " tbody tr").each(function () {
            $(this).find("td").attr("nowrap", "nowrap");
        });
        $("#" + config.id).DataTable().responsive.recalc();

        if (config.options.select) {
            if ($.inArray(data.id, fly01._[config.id].selected) !== -1) {
                $(row).addClass("selected");
                var index = arrayConciliacoes.findIndex(x => x.contaFinanceiraId == data.id);
                if (index !== -1) {
                    data.valorConciliado = arrayConciliacoes[index].valorConciliado;
                }
            }
        }
        return row;
    };
</script>