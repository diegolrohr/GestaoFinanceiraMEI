<script>
    @Html.Partial("Functions/_fnMain");

    function fnConfiguraTipoTributacaoICMSProduto() {
        var tipoTribICMS = $('form#fly01mdlfrmOrdemVendaProduto #grupoTributarioTipoTributacaoICMS').val();
        $('form#fly01mdlfrmOrdemVendaProduto #valorCreditoICMSField').hide();
        $('form#fly01mdlfrmOrdemVendaProduto #valorICMSSTRetidoField').hide();
        $('form#fly01mdlfrmOrdemVendaProduto #valorBCSTRetidoField').hide();
        $('form#fly01mdlfrmOrdemVendaProduto #valorBCFCPSTRetidoAnteriorField').hide();
        $('form#fly01mdlfrmOrdemVendaProduto #valorFCPSTRetidoAnteriorField').hide();
        
        //101 e 201 e 900
        if (tipoTribICMS == "TributadaComPermissaoDeCredito" || tipoTribICMS == "TributadaComPermissaoDeCreditoST" || tipoTribICMS == "Outros") {
            $('form#fly01mdlfrmOrdemVendaProduto #valorCreditoICMSField').show();
        }
        //500
        if (tipoTribICMS == "ICMSSubstituidoOuAntecipado") {
            $('form#fly01mdlfrmOrdemVendaProduto #valorICMSSTRetidoField').show();
            $('form#fly01mdlfrmOrdemVendaProduto #valorBCSTRetidoField').show();
            $('form#fly01mdlfrmOrdemVendaProduto #valorBCFCPSTRetidoAnteriorField').show();
            $('form#fly01mdlfrmOrdemVendaProduto #valorFCPSTRetidoAnteriorField').show();
        }
    }

    function fnFormReadyOrdemVendaProduto() {
        var id = $("form#fly01mdlfrmOrdemVendaProduto input#id").val();

        if (id.length == 0) {
            $('form#fly01mdlfrmOrdemVendaProduto input#ordemVendaId').val($('form#fly01frm input#id').val());
            $('form#fly01mdlfrmOrdemVendaProduto input#grupoTributarioIdProduto').val($('form#fly01frm input#grupoTributarioPadraoId').val());
            $('form#fly01mdlfrmOrdemVendaProduto input#grupoTributarioDescricaoProduto').val($('form#fly01frm input#grupoTributarioPadraoDescricao').val());
            $('form#fly01mdlfrmOrdemVendaProduto #grupoTributarioTipoTributacaoICMS').val($('form#fly01frm #grupoTributarioPadraoTipoTributacaoICMS').val());
        }
        fnConfiguraTipoTributacaoICMSProduto();

        fly01.fn.updateTextFields();
        fnOverrideSubmitOrdemVendaProduto();

        $('form#fly01mdlfrmOrdemVendaProduto input#valor').on('change', function () {
            fnChangeTotalProduto();
        });
        $('form#fly01mdlfrmOrdemVendaProduto input#desconto').on('change', function () {
            fnChangeTotalProduto();
        });
        $('form#fly01mdlfrmOrdemVendaProduto input#quantidade').on('change', function () {
            fnChangeTotalProduto();
        });
    }

    function fnOverrideSubmitOrdemVendaProduto() {
        var myForm = 'form#fly01mdlfrmOrdemVendaProduto'

        $(myForm).off('submit');
        $(myForm).on('submit', function (e) {
            var that = $(myForm)

            if (!that.valid())
                return false;

            e.preventDefault();
            fly01.loading.start();
            var formData = that.serializeObject();
            $.ajax({
                type: that.attr("method"),
                contentType: 'application/json',
                dataType: 'json',
                url: that.attr("action"),
                data: JSON.stringify(formData),
                success: function (data) {
                    if (data.success) {
                        fly01.toast(data.message, "success");
                        fly01._.dtOrdemVendaProdutos.refresh();
                        fly01._.fly01mdlfrmOrdemVendaProduto.close()
                    } else {
                        fly01.loading.stop();
                        try {
                            var jsonMessage = JSON.parse(data.message);
                            var validator = that.validate();
                            var errors = {};
                            jsonMessage.innerMessage.filter(x => ((x.dataField || "") != "")).forEach(element => {
                                if ($("#" + element.dataField).length > 0) {
                                    errors[element.dataField] = element.message;
                                }
                                else {
                                    fly01.toast(element.message, "error", 8000);
                                }
                            });
                            validator.showErrors(errors);
                            jsonMessage.innerMessage.filter(x => ((x.dataField || "") == "")).forEach(element => {
                                fly01.toast(element.message, "error", 8000);
                            });
                        } catch (e) {
                            fly01.toast(data.message, "error");
                        }
                    }
                    fly01.loading.stop();
                },
                error: function error(jXHR, textStatus) {
                    fly01.toast(textStatus, "error");
                    fly01.loading.stop();
                }
            })
        });
    }

</script>