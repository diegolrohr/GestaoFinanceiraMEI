<script>

    function setupGridSelectEvents() {
        //ver validacao contador limite de 50
        fly01._.dtContasExistentes.on("select", function (e, dt, type, indexes) {
            if (type !== undefined) {
                var valorAcumulado = getValorSomaSelecionados();
                var rowData = fly01._.dtContasExistentes.rows(indexes).data().toArray();
                var valorConciliado = parseFloat(rowData[0].saldo.replace("R$ ", "").replace("R$", "").replace(".", "").replace(",", "."));

                var index = arrayConciliacoes.findIndex(x => x.contaFinanceiraId == rowData[0].id);
                if (index == -1) {
                    arrayConciliacoes.push({
                        conciliacaoBancariaItemId: getId(),
                        contaFinanceiraId: rowData[0].id,
                        valorConciliado: valorConciliado
                    });
                    valorAcumulado += valorConciliado;

                    fnAtualizaValorSelecionados(valorAcumulado);
                }
            }

        }).on('deselect', function (e, dt, type, indexes) {
            if (type !== undefined) {

                var valorAcumulado = getValorSomaSelecionados();
                var rowData = fly01._.dtContasExistentes.rows(indexes).data().toArray();

                var index = arrayConciliacoes.findIndex(x => x.contaFinanceiraId == rowData[0].id);
                if (index !== -1) {//se achou remove
                    var valorConciliado = arrayConciliacoes[index].valorConciliado;

                    var row = fly01._.dtContasExistentes.row(indexes);
                    //volta o valor original
                    $("input.valorParcial[data-id=\"" + row.data().id + "\"]").val(row.data().valorConciliado.replace("R$ ", "").replace("R$", "").replace(".", "").replace(",", "."));

                    arrayConciliacoes.splice(index, 1);
                    valorAcumulado -= valorConciliado;

                    fnAtualizaValorSelecionados(valorAcumulado);
                }
            }
        });
    }

    function getValorSomaSelecionados() {
        var somaValores = $('#somaValoresSelecionados').val().replace("R$", "").replace("R$ ", "").replace(".", "").replace(",", ".");
        var result = parseFloat(somaValores);
        return result;
    }

    function fnAtualizaValorSelecionados(valorAcumulado) {
        var valorLancamentoExtrato = parseFloat($('input#valor').val().replace("R$ ", "").replace("R$", "").replace(".", "").replace(",", ".").replace("-", ""));

        $('input#somaValoresSelecionados').val(valorAcumulado);
        fly01.core.updateTextFields();
        $('input#somaValoresSelecionados').css('color', '');
        $('#save').attr('disabled', 'disabled');

        if (valorAcumulado == valorLancamentoExtrato) {
            $('#somaValoresSelecionados').css('color', 'green');
            fly01.toast("A soma dos valores conciliados está de acordo ao valor do lançamento", "info");
            $('#save').removeAttr('disabled');
        }
        else if (valorAcumulado > valorLancamentoExtrato) {
            $('#somaValoresSelecionados').css('color', 'red');
            fly01.toast('A soma dos valores conciliados não pode ser maior que o valor da conta.', "error");
            $('#save').attr('disabled', 'disabled');
        }
        else if (valorAcumulado <= 0) {
            $('#somaValoresSelecionados').css('color', 'red');
            fly01.toast('A soma dos valores conciliados não pode ser igual a zero.', "error");
            $('#save').attr('disabled', 'disabled');
        }
    }

    function fnFormReadyBaixaEmLote() {
        $('#Field').hide();
    }
</script>